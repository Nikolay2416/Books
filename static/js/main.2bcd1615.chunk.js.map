{"version":3,"sources":["hooks/http.hook.js","components/booksList/booksSlice.js","components/booksListItem/BooksListItem.js","components/spinner/Spinner.js","components/booksList/BooksList.js","components/booksAddForm/BooksAddForm.js","components/booksFilters/filtersSlice.js","components/booksFilters/BooksFilters.js","components/app/App.js","store/index.js","index.js"],"names":["useHttp","request","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","fetchBooks","createAsyncThunk","_useHttp","booksSlice","createSlice","name","initialState","books","booksLoadingStatus","reducers","bookCreated","state","action","push","payload","bookDeleted","filter","item","id","extraReducers","builder","addCase","pending","fulfilled","rejected","addDefaultCase","actions","reducer","booksFetching","booksFetched","booksFetchingError","BooksListItem","description","onDelete","img","author","element","_jsxs","className","children","_jsx","src","alt","style","onClick","type","Spinner","role","BooksList","_useState","useState","_useState2","_slicedToArray","value","setValue","filteredBooksSelector","createSelector","filters","activeFilter","meaning","toLowerCase","includes","console","log","filteredBooks","useSelector","dispatch","useDispatch","useEffect","useCallback","then","catch","err","arr","elements","CSSTransition","timeout","classNames","map","props","_objectWithoutProperties","_excluded","_objectSpread","TransitionGroup","component","class","onChange","event","target","BooksAddForm","setName","_useState3","_useState4","descr","setDescr","_useState5","_useState6","setAuthor","_useState7","_useState8","setElement","_useState9","_useState10","setImg","_useSelector","filtersLoadingStatus","onSubmit","e","preventDefault","newBook","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","label","renderFilters","fetchFilters","filtersSlice","activeFilterChanged","filtersFetching","filtersFetched","filtersFetchingError","BooksFilters","btnClass","App","stringMiddleware","store","configureStore","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"6QAAaA,EAAU,WAEnB,IAAMC,EAAO,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAV,cAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA6E,OAA3EV,EAAMK,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,MAAOJ,EAAII,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,KAAMH,EAAOG,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,CAAC,eAAgB,oBAAmBG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGxEG,MAAMd,EAAK,CAACC,SAAQC,OAAMC,YAAU,KAAD,EAA5C,IAARC,EAAQK,EAAAM,MAEAC,GAAG,CAADP,EAAAE,KAAA,cACN,IAAIM,MAAM,mBAADC,OAAoBlB,EAAG,cAAAkB,OAAad,EAASe,SAAU,KAAD,SAAAV,EAAAE,KAAA,GAGtDP,EAASgB,OAAO,KAAD,GAAxB,OAAJf,EAAII,EAAAM,KAAAN,EAAAY,OAAA,SAEHhB,GAAI,cAAAI,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAAAA,EAAAa,GAAC,KAAD,oBAAAb,EAAAc,OAAA,GAAAxB,EAAA,mBAIlB,gBAfYyB,GAAA,OAAA7B,EAAA8B,MAAA,KAAAlB,UAAA,KAiBb,MAAO,CAACb,UACZ,E,+BCZagC,EAAaC,YACtB,mBAAkB/B,YAAAC,cAAAC,MAClB,SAAAC,IAAA,IAAA6B,EAAAlC,EAAA,OAAAG,cAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACkB,OADlBiB,EACsBnC,IAAXC,EAAOkC,EAAPlC,QAAOe,EAAAE,KAAA,EACDjB,EAAQ,+BAA+B,KAAD,SAAAe,EAAAY,OAAA,SAAAZ,EAAAM,MAAA,wBAAAN,EAAAc,OAAA,GAAAxB,EAAA,MAIrD8B,EAAaC,YAAY,CAC3BC,KAAM,QACNC,aAfiB,CACjBC,MAAO,GACPC,mBAAoB,QAcpBC,SAAU,CACNC,YAAa,SAACC,EAAOC,GACjBD,EAAMJ,MAAMM,KAAKD,EAAOE,QAC5B,EACAC,YAAa,SAACJ,EAAOC,GACjBD,EAAMJ,MAAQI,EAAMJ,MAAMS,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAON,EAAOE,OAAO,GACvE,GAEJK,cAAe,SAACC,GACZA,EACKC,QAAQrB,EAAWsB,SAAS,SAAAX,GAAUA,EAAMH,mBAAqB,SAAS,IAC1Ea,QAAQrB,EAAWuB,WAAW,SAACZ,EAAOC,GACnCD,EAAMH,mBAAqB,OAC3BG,EAAMJ,MAAQK,EAAOE,OACzB,IACCO,QAAQrB,EAAWwB,UAAU,SAAAb,GAC1BA,EAAMH,mBAAqB,OAC/B,IACCiB,gBAAe,WAAO,GAC/B,IAGGC,EAAoBvB,EAApBuB,QAEQC,EAFYxB,EAAXwB,QAOZjB,GAEAgB,EALAE,cAKAF,EAJAG,aAIAH,EAHAI,mBAGAJ,EAFAhB,aACAK,EACAW,EADAX,Y,OCzBWgB,EAxBO,SAAH9D,GAA6D,IAAxDoC,EAAIpC,EAAJoC,KAAM2B,EAAW/D,EAAX+D,YAAaC,EAAQhE,EAARgE,SAAUC,EAAGjE,EAAHiE,IAAKC,EAAMlE,EAANkE,OAAQC,EAAOnE,EAAPmE,QAE9D,OACIC,eAAA,MACIC,UAAS,8DAAgEC,SAAA,CACzEC,cAAA,OAAKC,IAAKP,EACLI,UAAU,0BACVI,IAAI,eACJC,MAAO,CAAC,UAAa,WAC1BN,eAAA,OAAKC,UAAU,YAAWC,SAAA,CAEtBC,cAAA,MAAIF,UAAU,aAAYC,SAAElC,IAC5BmC,cAAA,MAAIF,UAAU,aAAYC,SAAEJ,IAC5BK,cAAA,KAAGF,UAAU,YAAWC,SAAEP,IAC1BK,eAAA,KAAGC,UAAU,aAAYC,SAAA,CAAC,kHAAsBH,QAEpDI,cAAA,QAAMI,QAASX,EACXK,UAAU,wFAAuFC,SACjGC,cAAA,UAAQK,KAAK,SAASP,UAAU,sBAAsB,aAAW,cAIjF,ECbeQ,EARC,WACZ,OACIN,cAAA,OAAKF,UAAU,8BAA8BS,KAAK,SAAQR,SACtDC,cAAA,QAAMF,UAAU,kBAAiBC,SAAC,gBAG9C,E,iBC+FeS,EAzFG,WAEd,IAAAC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,EAAwBC,aAC1B,SAAC7C,GAAK,OAAKA,EAAM8C,QAAQC,YAAY,IACrC,SAAC/C,GAAK,OAAKA,EAAMJ,MAAMA,KAAK,IAC5B,SAACS,EAAQT,GAEL,IAAIoD,EAWJ,OANIA,EAHW,QAAX3C,GAA+B,KAAVqC,GAA0B,KAAVA,EAEnB,QAAXrC,EACGT,EAAMS,QAAO,SAAAC,GAAI,OAAIA,EAAKZ,KAAKuD,cAAcC,SAASR,EAAMO,cAAc,IAE1ErD,EAJAA,EAAMS,QAAO,SAAAC,GAAI,OAAIA,EAAKmB,UAAYpB,GAAUC,EAAKZ,KAAKuD,cAAcC,SAASR,EAAMO,cAAc,IAOnHE,QAAQC,IAAIJ,GACLA,CACX,IAGEK,EAAgBC,YAAYV,GAC5B/C,EAAqByD,aAAY,SAAAtD,GAAK,OAAIA,EAAMJ,MAAMC,kBAAkB,IACxE0D,EAAWC,cACVnG,EAAWD,IAAXC,QAEPoG,qBAAU,WACNF,EAASlE,IAEb,GAAG,IAEH,IAAMiC,EAAWoC,uBAAY,SAACnD,GAC1BlD,EAAQ,+BAADwB,OAAgC0B,GAAM,UACxCoD,MAAK,SAAA3F,GAAI,OAAImF,QAAQC,IAAIpF,EAAM,UAAU,IACzC2F,KAAKJ,EAASnD,EAAYG,KAC1BqD,OAAM,SAAAC,GAAG,OAAIV,QAAQC,IAAIS,EAAI,GAEtC,GAAG,CAACxG,IAEJ,GAA2B,YAAvBwC,EACA,OAAOgC,cAACM,EAAO,IACZ,GAA2B,UAAvBtC,EACP,OAAOgC,cAAA,MAAIF,UAAU,mBAAkBC,SAAC,0FAG5C,IAAyBkC,EAwBnBC,EAtBiB,KAFED,EAwBQT,GAtBrB9E,OAEAsD,cAACmC,IAAa,CACVC,QAAS,EACTC,WAAW,OAAMtC,SACjBC,cAAA,MAAIF,UAAU,mBAAkBC,SAAC,2EAKtCkC,EAAIK,KAAI,SAAA7G,GAAqB,IAAnBiD,EAAEjD,EAAFiD,GAAO6D,EAAKC,YAAA/G,EAAAgH,GACzB,OACIzC,cAACmC,IAAa,CAEVC,QAAS,IACTC,WAAW,OAAMtC,SACjBC,cAACT,EAAamD,wBAAA,GAAMH,GAAK,IAAE9C,SAAU,kBAAMA,EAASf,EAAG,MAHlDA,EAMjB,IAIJ,OAEImB,eAAC8C,IAAe,CAACC,UAAU,KAAI7C,SAAA,CAC3BF,eAAA,QAAMC,UAAU,mBAAkBC,SAAA,CAC9BC,cAAA,OAAKF,UAAU,WAAUC,SAAC,iGAC1BC,cAAA,SACA6C,MAAM,QACNxC,KAAK,OACLyC,SAAU,SAACC,GAAK,OAAKjC,EAASiC,EAAMC,OAAOnC,MAAM,OAGpDqB,IAGb,E,QCuCee,EApIM,WAEjB,IAAAxC,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7B5C,EAAI8C,EAAA,GAAEuC,EAAOvC,EAAA,GACpBwC,EAA0BzC,mBAAS,IAAG0C,EAAAxC,YAAAuC,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA4B7C,mBAAS,IAAG8C,EAAA5C,YAAA2C,EAAA,GAAjC5D,EAAM6D,EAAA,GAAEC,EAASD,EAAA,GACxBE,EAA8BhD,mBAAS,IAAGiD,EAAA/C,YAAA8C,EAAA,GAAnC9D,EAAO+D,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,EAAsBnD,mBAAS,IAAGoD,EAAAlD,YAAAiD,EAAA,GAA3BnE,EAAGoE,EAAA,GAAEC,EAAMD,EAAA,GAElBE,EAAwCvC,aAAY,SAAAtD,GAAK,OAAIA,EAAM8C,OAAO,IAAnEA,EAAO+C,EAAP/C,QAASgD,EAAoBD,EAApBC,qBACVvC,EAAWC,cACVnG,EAAWD,IAAXC,QAiDP,OACIqE,eAAA,QAAMC,UAAU,+BAA+BoE,SAhD3B,SAACC,GACrBA,EAAEC,iBAGF,IAAMC,EAAU,CACZ3F,GAAI4F,cACJzG,KAAMA,EACN8B,OAAQA,EACRH,YAAa6D,EACbzD,QAASA,EACTF,IAAY,IAAPA,GAAoB,KAAPA,EAAa,gIAAkIA,GAKrKlE,EAAQ,8BAA+B,OAAQ+I,KAAKC,UAAUH,IACzDvC,MAAK,SAAA2C,GAAG,OAAInD,QAAQC,IAAIkD,EAAK,8FAAmB,IAChD3C,KAAKJ,EAASxD,EAAYmG,KAC1BtC,OAAM,SAAAC,GAAG,OAAIV,QAAQC,IAAIS,EAAI,IAGlCkB,EAAQ,IACRI,EAAS,IACTG,EAAU,IACVG,EAAW,IACXG,EAAO,GACX,EAsB6EhE,SAAA,CACrEF,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACjBC,cAAA,SAAO0E,QAAQ,OAAO5E,UAAU,kBAAiBC,SAAC,oFAClDC,cAAA,SACI2E,UAAQ,EACRtE,KAAK,OACLxC,KAAK,OACLiC,UAAU,eACVpB,GAAG,OACHkG,YAAY,GACZ/D,MAAOhD,EACPiF,SAAU,SAACqB,GAAC,OAAKjB,EAAQiB,EAAEnB,OAAOnC,MAAM,OAGhDhB,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACjBC,cAAA,SAAO0E,QAAQ,OAAO5E,UAAU,kBAAiBC,SAAC,mCAClDC,cAAA,SACI2E,UAAQ,EACRtE,KAAK,OACLxC,KAAK,SACLiC,UAAU,eACVpB,GAAG,SACHkG,YAAY,GACZ/D,MAAOlB,EACPmD,SAAU,SAACqB,GAAC,OAAKV,EAAUU,EAAEnB,OAAOnC,MAAM,OAGlDhB,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACjBC,cAAA,SAAO0E,QAAQ,OAAO5E,UAAU,kBAAiBC,SAAC,uEAClDC,cAAA,YACI2E,UAAQ,EACR9G,KAAK,OACLiC,UAAU,eACVpB,GAAG,OACHkG,YAAY,GACZzE,MAAO,CAAC,OAAU,SAClBU,MAAOwC,EACPP,SAAU,SAACqB,GAAC,OAAKb,EAASa,EAAEnB,OAAOnC,MAAM,OAGjDhB,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACjBC,cAAA,SAAO0E,QAAQ,OAAO5E,UAAU,kBAAiBC,SAAC,gIAClDC,cAAA,SACI2E,UAAQ,EACRtE,KAAK,OACLxC,KAAK,MACLiC,UAAU,eACVpB,GAAG,MACHkG,YAAY,wDACZ/D,MAAOnB,EACPoD,SAAU,SAACqB,GAAC,OAAKJ,EAAOI,EAAEnB,OAAOnC,MAAM,OAG/ChB,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACjBC,cAAA,SAAO0E,QAAQ,UAAU5E,UAAU,aAAYC,SAAC,yCAChDF,eAAA,UACI8E,UAAQ,EACR7E,UAAU,cACVpB,GAAG,UACHb,KAAK,UACLgD,MAAOjB,EACPkD,SAAU,SAACqB,GAAC,OAAKP,EAAWO,EAAEnB,OAAOnC,MAAM,EAACd,SAAA,CAC5CC,cAAA,UAAQa,MAAM,GAAEd,SAAC,iFAlFX,SAACkB,EAAShE,GAC5B,MAAe,YAAXA,EACO+C,cAAA,UAAAD,SAAQ,0FACG,UAAX9C,EACA+C,cAAA,UAAAD,SAAQ,0FAIfkB,GAAWA,EAAQvE,OAAS,EACrBuE,EAAQqB,KAAI,SAAA7G,GAAoB,IAAlBoC,EAAIpC,EAAJoC,KAAMgH,EAAKpJ,EAALoJ,MAGvB,GAAa,QAAThH,EAEJ,OAAOmC,cAAA,UAAmBa,MAAOhD,EAAKkC,SAAE8E,GAApBhH,EACxB,SAPJ,CASJ,CAkEiBiH,CAAc7D,EAASgD,SAIhCjE,cAAA,UAAQK,KAAK,SAASP,UAAU,kBAAiBC,SAAC,uDAG9D,E,iBChIagF,EAAetH,YAC1B,uBAAsB/B,YAAAC,cAAAC,MACtB,SAAAC,IAAA,IAAA6B,EAAAlC,EAAA,OAAAG,cAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACkB,OADlBiB,EACsBnC,IAAXC,EAAOkC,EAAPlC,QAAOe,EAAAE,KAAA,EACDjB,EAAQ,iCAAiC,KAAD,SAAAe,EAAAY,OAAA,SAAAZ,EAAAM,MAAA,wBAAAN,EAAAc,OAAA,GAAAxB,EAAA,MAIrDmJ,EAAepH,YAAY,CAC/BC,KAAM,UACNC,aAhBmB,CACnBmD,QAAS,GACTgD,qBAAsB,OACtB/C,aAAc,OAcdjD,SAAU,CACNgH,oBAAqB,SAAC9G,EAAOC,GACzBD,EAAM+C,aAAe9C,EAAOE,OAChC,GAEJK,cAAe,SAACC,GACdA,EACKC,QAAQkG,EAAajG,SAAS,SAAAX,GAAUA,EAAM8F,qBAAuB,SAAS,IAC9EpF,QAAQkG,EAAahG,WAAW,SAACZ,EAAOC,GACrCD,EAAM8F,qBAAuB,OAC7B9F,EAAM8C,QAAU7C,EAAOE,OAC3B,IACCO,QAAQkG,EAAa/F,UAAU,SAAAb,GAC5BA,EAAM8F,qBAAuB,OACjC,IACChF,gBAAe,WAAO,GAC/B,IAGOC,EAAoB8F,EAApB9F,QAEQC,EAFY6F,EAAX7F,QAOd8F,GACE/F,EAJFgG,gBAIEhG,EAHFiG,eAGEjG,EAFFkG,qBAEElG,EADF+F,qBCcaI,EApDM,WAEjB,IAAArB,EAAsDvC,aAAY,SAAAtD,GAAK,OAAIA,EAAM8C,OAAO,IAAjFA,EAAO+C,EAAP/C,QAASgD,EAAoBD,EAApBC,qBAAsB/C,EAAY8C,EAAZ9C,aAChCQ,EAAWC,cACVnG,EAAWD,IAAXC,QAMP,GAJAoG,qBAAU,WACNF,EAASqD,EAAavJ,GAC1B,GAAG,IAE0B,YAAzByI,EACA,OAAOjE,cAACM,EAAO,IACZ,GAA6B,UAAzB2D,EACP,OAAOjE,cAAA,MAAIF,UAAU,mBAAkBC,SAAC,0FAG5C,IAAuBkC,EAsBjBC,EArBiB,KADAD,EAsBQhB,GArBnBvE,OACGsD,cAAA,MAAIF,UAAU,mBAAkBC,SAAC,uGAGrCkC,EAAIK,KAAI,SAAA7G,GAA+B,IAA7BoC,EAAIpC,EAAJoC,KAAMiC,EAASrE,EAATqE,UAAW+E,EAAKpJ,EAALoJ,MAGxBS,EAAWjD,IAAW,MAAOvC,EAAW,CAC1C,OAAUjC,IAASqD,IAGvB,OAAOlB,cAAA,UAEKtB,GAAIb,EACJiC,UAAWwF,EACXlF,QAAS,kBAAMkB,QAAQC,IAAIG,EAASuD,EAAoBpH,IAAO,EAC/DsC,MAAO,CAAC,QAAY,YAAYJ,SAC9B8E,GALGhH,EAMrB,IAKJ,OACImC,cAAA,OAAKF,UAAU,2BAA0BC,SACrCF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACtBC,cAAA,KAAGF,UAAU,YAAWC,SAAC,qIACzBC,cAAA,OAAKF,UAAU,YAAWC,SACrBmC,QAKrB,ECrCeqD,G,MAfH,WAER,OACIvF,cAAA,QAAMF,UAAU,MAAKC,SACjBF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACpBC,cAACQ,EAAS,IACVX,eAAA,OAAKC,UAAU,uBAAsBC,SAAA,CACjCC,cAACqF,EAAY,IACbrF,cAACiD,EAAY,WAKjC,GCfMuC,EAAmB,WAAH,OAAS,SAAC/I,GAAI,OAAK,SAAC2B,GACtC,OACW3B,EADW,kBAAX2B,EACK,CACRiC,KAAMjC,GAGFA,EAChB,CAAE,CAAD,EAQcqH,EANDC,YAAe,CACzBvG,QAAS,CAACpB,QAAOkD,WACjB0E,WAAY,SAAAC,GAAoB,OAAIA,IAAuB5I,OAAOwI,EAAiB,EACnFK,UAAUC,I,MCPdC,IAASC,OACPhG,cAACiG,IAAMC,WAAU,CAAAnG,SACfC,cAACmG,IAAQ,CAACV,MAAOA,EAAM1F,SACrBC,cAACuF,EAAG,QAGRa,SAASC,eAAe,Q","file":"static/js/main.2bcd1615.chunk.js","sourcesContent":["export const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            throw e;\n        }\n    };\n\n    return {request}\n}\n\n\n// import { useCallback } from \"react\";\n\n// export const useHttp = () => {\n//     // const [process, setProcess] = useState('waiting');\n\n//     const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n//         // setProcess('loading');\n\n//         try {\n//             const response = await fetch(url, {method, body, headers});\n\n//             if (!response.ok) {\n//                 throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n//             }\n\n//             const data = await response.json();\n\n//             return data;\n//         } catch(e) {\n//             // setProcess('error');\n//             throw e;\n//         }\n//     }, []);\n\n//     const requestPOST = useCallback(async (url, method = 'POST', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n//         // setProcess('loading');\n\n//         try {\n//             const response = await fetch(url, {method, body, headers});\n\n//             if (!response.ok) {\n//                 throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n//             }\n\n//             const data = await response.json();\n\n//             return data;\n//         } catch(e) {\n//             // setProcess('error');\n//             throw e;\n//         }\n//     }, []);\n\n//     // const clearError = useCallback(() => {\n//         // setProcess('loading');\n//     // }, []);\n\n//     return {request, \n//             requestPOST,\n//             // clearError, \n//             // process, \n//             // setProcess\n//         }\n// }","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {useHttp} from '../../hooks/http.hook';\r\n\r\nconst initialState = {\r\n    books: [],\r\n    booksLoadingStatus: 'idle'\r\n}\r\n\r\nexport const fetchBooks = createAsyncThunk(\r\n    'books/fetchBooks',\r\n    async () => {\r\n        const {request} = useHttp();\r\n        return await request(\"http://localhost:3001/books\");\r\n    }\r\n);\r\n\r\nconst booksSlice = createSlice({\r\n    name: 'books',\r\n    initialState,\r\n    reducers: {\r\n        bookCreated: (state, action) => {\r\n            state.books.push(action.payload);\r\n        },\r\n        bookDeleted: (state, action) => {\r\n            state.books = state.books.filter(item => item.id !== action.payload);\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchBooks.pending, state => {state.booksLoadingStatus = 'loading'})\r\n            .addCase(fetchBooks.fulfilled, (state, action) => {\r\n                state.booksLoadingStatus = 'idle';\r\n                state.books = action.payload;\r\n            })\r\n            .addCase(fetchBooks.rejected, state => {\r\n                state.booksLoadingStatus = 'error';\r\n            })\r\n            .addDefaultCase(() => {})\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = booksSlice;\r\n\r\nexport default reducer;\r\nexport const {\r\n    booksFetching,\r\n    booksFetched,\r\n    booksFetchingError,\r\n    bookCreated,\r\n    bookDeleted\r\n} = actions;","const BooksListItem = ({name, description, onDelete, img, author, element}) => {\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white bg-dark bg-gradient`}>\n            <img src={img} \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown book\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <h3 className=\"card-title\">{author}</h3>\n                <p className=\"card-text\">{description}</p>\n                <p className=\"card-title\">Оценка произведения: {element}</p>\n            </div>\n            <span onClick={onDelete} \n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default BooksListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook'; \nimport { useEffect, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { bookDeleted, fetchBooks } from './booksSlice';\n\nimport BooksListItem from \"../booksListItem/BooksListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './booksList.scss';\n\nconst BooksList = () => {\n\n    const [value, setValue] = useState('');\n\n    const filteredBooksSelector = createSelector(\n        (state) => state.filters.activeFilter,\n        (state) => state.books.books,\n        (filter, books) => {\n\n            let meaning;\n\n            if (filter !== 'all' && (value !== '' || value === '')) {\n                meaning = books.filter(item => item.element === filter && item.name.toLowerCase().includes(value.toLowerCase()));\n            } else if (filter === 'all') {\n                meaning = books.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\n            } else {\n                meaning = books;\n            }\n\n            console.log(meaning); \n            return meaning;\n        }\n    );\n\n    const filteredBooks = useSelector(filteredBooksSelector);\n    const booksLoadingStatus = useSelector(state => state.books.booksLoadingStatus);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchBooks());\n        // eslint-disable-next-line\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        request(`http://localhost:3001/books/${id}`, \"DELETE\")\n            .then(data => console.log(data, 'Deleted'))\n            .then(dispatch(bookDeleted(id)))\n            .catch(err => console.log(err));\n        // eslint-disable-next-line  \n    }, [request]);\n\n    if (booksLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (booksLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderBooksList = (arr) => {\n\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Книг пока нет</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition \n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <BooksListItem  {...props} onDelete={() => onDelete(id)}/>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderBooksList(filteredBooks);\n    return (\n        \n        <TransitionGroup component=\"ul\">\n            <form className=\"d-flex mt-0 mb-4\">\n                <div className=\"fs-4 p-1\">Поиск по названию</div>\n                <input\n                class=\"input\" \n                type=\"text\"\n                onChange={(event) => setValue(event.target.value)}/>\n            </form>\n                \n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default BooksList;","import {useHttp} from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { bookCreated } from '../booksList/booksSlice';\n\nconst BooksAddForm = () => {\n    // Состояния для контроля формы\n    const [name, setName] = useState('');\n    const [descr, setDescr] = useState('');\n    const [author, setAuthor] = useState('');\n    const [element, setElement] = useState('');\n    const [img, setImg] = useState('');\n\n    const {filters, filtersLoadingStatus} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n\n        // Генерация id через библиотеку\n        const newBook = {\n            id: uuidv4(),\n            name: name,\n            author: author,\n            description: descr,\n            element: element,\n            img: img == '' || img == ' ' ? \"https://png.pngtree.com/png-vector/20190117/ourlarge/pngtree-frequency-ask-question-iconblack-icon-color-png-image_323491.jpg\" : img,\n        }\n        \n        // Отправляем данные на сервер в формате JSON\n        // ТОЛЬКО если запрос успешен - отправляем персонажа в store\n        request(\"http://localhost:3001/books\", \"POST\", JSON.stringify(newBook))\n            .then(res => console.log(res, 'Отправка успешна'))\n            .then(dispatch(bookCreated(newBook)))\n            .catch(err => console.log(err));\n\n        // Очищаем форму после отправки\n        setName('');\n        setDescr('');\n        setAuthor('');\n        setElement('');\n        setImg('');\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Загрузка оценок</option>\n        } else if (status === \"error\") {\n            return <option>Ошибка загрузки</option>\n        }\n        \n        // Если фильтры есть, то рендерим их\n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // Один из фильтров нам тут не нужен\n\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Название книги</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Автор</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"author\" \n                    className=\"form-control\" \n                    id=\"author\" \n                    placeholder=\"\"\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Комментарий</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"\"\n                    style={{\"height\": '130px'}}\n                    value={descr}\n                    onChange={(e) => setDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Ссылка на обложку книги</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"img\" \n                    className=\"form-control\" \n                    id=\"img\" \n                    placeholder=\"В формате jpg\"\n                    value={img}\n                    onChange={(e) => setImg(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Оценка</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={element}\n                    onChange={(e) => setElement(e.target.value)}>\n                    <option value=\"\">Оцените книгу...</option>\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Добавить</button>\n        </form>\n    )\n}\n\nexport default BooksAddForm;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {useHttp} from '../../hooks/http.hook';\r\n\r\nconst initialState = {\r\n  filters: [],\r\n  filtersLoadingStatus: 'idle',\r\n  activeFilter: 'all'\r\n}\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n  'filters/fetchFilters',\r\n  async () => {\r\n      const {request} = useHttp();\r\n      return await request(\"http://localhost:3001/filters\");\r\n  }\r\n);\r\n\r\nconst filtersSlice = createSlice({\r\n  name: 'filters',\r\n  initialState,\r\n  reducers: {\r\n      activeFilterChanged: (state, action) => {\r\n          state.activeFilter = action.payload;\r\n      }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n        .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'})\r\n        .addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.filtersLoadingStatus = 'idle';\r\n            state.filters = action.payload;\r\n        })\r\n        .addCase(fetchFilters.rejected, state => {\r\n            state.filtersLoadingStatus = 'error';\r\n        })\r\n        .addDefaultCase(() => {})\r\n}\r\n});\r\n\r\nconst {actions, reducer} = filtersSlice;\r\n\r\nexport default reducer;\r\nexport const {\r\n  filtersFetching,\r\n  filtersFetched,\r\n  filtersFetchingError,\r\n  activeFilterChanged,\r\n} = actions;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { fetchFilters, activeFilterChanged } from './filtersSlice';\nimport Spinner from '../spinner/Spinner';\n\nconst BooksFilters = () => {\n\n    const {filters, filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchFilters(request));\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\n        }\n\n        return arr.map(({name, className, label}) => {\n\n            // Используем библиотеку classnames и формируем классы динамически\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n            \n            return <button \n                        key={name} \n                        id={name} \n                        className={btnClass}\n                        onClick={() => console.log(dispatch(activeFilterChanged(name)))}\n                        style={{\"padding\" : \"7px 25px\"}}\n                        >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-0 mb-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте по оценкам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BooksFilters;","import BooksList from '../booksList/BooksList';\nimport BooksAddForm from '../booksAddForm/BooksAddForm';\nimport BooksFilters from '../booksFilters/BooksFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <BooksList/>\n                <div className=\"content__interactive\">\n                    <BooksFilters/>\n                    <BooksAddForm/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport books from '../components/booksList/booksSlice';\nimport filters from '../components/booksFilters/filtersSlice';\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n};\n\nconst store = configureStore({\n    reducer: {books, filters},\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n    devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}